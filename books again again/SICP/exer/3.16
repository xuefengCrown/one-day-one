(define x (list 'a 'b))
(define y (list 'c 'd))
(define z (append x y))
(define z2 (cons x (cdr x)))

(define a (cons 'a ()))
(define b (cons a a))
(define c (cons b b))

(define (count-pairs x)
  (if (not (pair? x))
      0
      (+ (count-pairs (car x))
         (count-pairs (cdr x))
         1))
  )
