
mkdir -p test1/test2/test3/test4
# 加了这个 -p 的选项，可以自行帮你建立多层目录！

范例：建立权限为 rwx--x--x 癿目录
[root@www tmp]# mkdir -m 711 test2
[root@www tmp]# ls -l

# 仔绅看上面癿权限部分，如果没有加上 -m 强制设定属性，系统会使用默认属性。
# 那么你癿默认属性为何？这要透过底下介绍的 umask 才能了解喔！


2. 关亍执行文件路径的变量： $PATH
echo $PATH //而 PATH 前面加的 $ 表示后面接的是变量，所以会显示出目前的 PATH
(3)如果想要 root 在任何目录均可执行/root 底下的 ls，那么就将/root 加入 PATH 当中
即可。 加入的方法很简单，就像底下这样：
[root@www ~]# PATH="$PATH":/root

划重点：
不同身份使用者预设的 PATH 不同，默认能够随意执行的指令也不同(如 root 不同于 vbird)；
  PATH 是可以修改的，所以一般使用者还是可以透过修改 PATH 来执行某些位亍/sbin 或
/usr/sbin 下的指令来查询；
  使用绝对路径或相对路径直接指定某个指定的文件名来执行，会比搜寻 PATH 来的正确；
  指令应该要放置到正确的目录下，执行才会比较方便；
  本目录(.)最好不要放到 PATH 当中。


3. ls
包括查阅档案所在 i-node 号码的 ls -i 选项，以及用来进行档案排序的 -S 选
项

cp -u f1 f2 //测试新旧
4. rm
rm -i bashrc*





python中使用 sys.path 查看python的路径目录









